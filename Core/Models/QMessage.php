<?php

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
require_once 'Core/Models/CoreModel.php';
/**
 * Description of QMessage
 *
 * @author smarkoski
 */
class QMessage extends CoreModel {
    
    protected $messageid;       //A unique ID generated by the database
    protected $msg_obj;         //The object the message will use
    protected $msg_method;      //The method from the object that the message will call
    protected $msg_args;        //Any arguments the method will need
    protected $added;           //A timestamp telling when this message was created
    
    /**
     * Queries the table for the next message and sets $this
     * object to that message 
     */
    public function getNextMessage() {
        $db = DB::instance();
        $query = 'SELECT * FROM message_queue ORDER BY added ASC LIMIT 1';
        $db->query($query);
        $result = $db->fetchResult();
        $this->populate($result);
        $this->msg_args = unserialize($this->msg_args);
    }
    
    
    public function deleteMessage() {
        $db = DB::instance();
        $query = 'DELETE FROM message_queue WHERE messageid=?';
        $db->query($query, 'i', array($this->messageid));
    }
    
    
    /**
     *
     * @param string $obj The name of the object that will handle this message
     * @param string $method The name of the method in the object that will handle this message 
     * @param array $args An array of arguments 
     */
    public function queueMessage() {
        $argsModified = serialize($this->msg_args);
        $db = DB::instance();
        $query = 'INSERT INTO message_queue (msg_obj, msg_method, msg_args, added) VALUES (?, ?, ?, NOW())';
        $db->query($query, 's,s,s', array($this->msg_obj, $this->msg_method, $argsModified));
    }
    
}

?>
